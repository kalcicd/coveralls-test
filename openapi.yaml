swagger: '2.0'
info:
  title: Express API Skeleton
  description: Skeleton for Express APIs
  version: v1
  license:
    name: GNU Affero General Public License Version 3
    url: http://www.gnu.org/licenses/agpl-3.0.en.html
  contact:
    name: IS Data Architecture Team
    url: https://is.oregonstate.edu/data-architecture
    email: isdataarchitecture@oregonstate.edu
schemes:
  - https
host: api.oregonstate.edu
basePath: /v1
externalDocs:
  description: GitHub Repository
  url: https://github.com/osu-mist/express-api-skeleton
produces:
  - application/json
consumes:
  - application/json
security:
  - OAuth2:
      - full
paths:
  /pets:
    get:
      summary: List all pets
      tags:
        - pets
      description: Get all pets
      operationId: getPets
      parameters:
        - $ref: '#/parameters/pageNumber'
        - $ref: '#/parameters/pageSize'
        - in: query
          name: species
          description: Search by pet species
          required: false
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PetsResult'
        '400':
          $ref: '#/responses/400'
        '500':
          $ref: '#/responses/500'
    post:
      summary: Add a new pet
      operationId: postPet
      tags:
        - pets
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PetPostBody'
      responses:
        '201':
          description: Pet successfully created
          schema:
            $ref: '#/definitions/PetResult'
        '400':
          $ref: '#/responses/400'
        '409':
          description: Conflict
          schema:
            $ref: '#/definitions/ErrorResult'
        '500':
          $ref: '#/responses/500'
  /pets/{id}:
    get:
      summary: Info for a specific pet
      tags:
        - pets
      description: Get pet by unique ID
      operationId: getPetById
      parameters:
        - name: id
          in: path
          description: Unique Pet ID, UUID format
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/PetResult'
        '404':
          description: PetResource not found
          schema:
            $ref: '#/definitions/ErrorResult'
        '500':
          $ref: '#/responses/500'
parameters:
  pageNumber:
    name: page[number]
    in: query
    type: integer
    required: false
    description: Page number of results
    default: 1
    minimum: 1
  pageSize:
    name: page[size]
    in: query
    type: integer
    required: false
    description: Number of results to return
    default: 25
    maximum: 500
    minimum: 1
responses:
  '400':
     description: Bad request
     schema:
       $ref: '#/definitions/ErrorResult'
  '500':
     description: Internal server error
     schema:
       $ref: '#/definitions/ErrorResult'
securityDefinitions:
  OAuth2:
    type: oauth2
    flow: application
    tokenUrl: https://api.oregonstate.edu/oauth2/token
    scopes:
      full: Full access to the API
definitions:
  Meta:
    properties:
      totalResults:
        type: integer
        description: Total number of results
        example: 10
      totalPages:
        type: integer
        description: Total number of pages
        example: 10
      currentPageNumber:
        type: integer
        description: Page number of the returned results
        example: 1
      currentPageSize:
        type: integer
        description: Number of results per page
        example: 25
  SelfLink:
    properties:
      self:
        type: string
        format: url
        description: Self-link of current resource
  PaginationLinks:
    properties:
      first:
        type: string
        format: url
        description: The first page of data
      last:
        type: string
        format: url
        description: The last page of data
      prev:
        type: string
        format: url
        description: The previous page of data
      next:
        type: string
        format: url
        description: The next page of data
  PetResource:
    properties:
      id:
        type: string
        description: A unique ID of pet
      type:
        $ref: '#/definitions/PetType'
      links:
        $ref: '#/definitions/SelfLink'
      attributes:
        properties:
          name:
            type: string
            description: Name of pet
            example: Hedwig
          owner:
            type: string
            description: Name of owner
            example: Harry Potter
          species:
            type: string
            description: Species of pet
            example: Owl
  PetResult:
    properties:
      links:
        $ref: '#/definitions/SelfLink'
      data:
        $ref: '#/definitions/PetResource'
  PetsResult:
    properties:
      links:
        allOf:
          - $ref: '#/definitions/SelfLink'
          - $ref: '#/definitions/PaginationLinks'
      meta:
        $ref: '#/definitions/Meta'
      data:
        type: array
        items:
          $ref: '#/definitions/PetResource'
  PetPostBody:
    properties:
      data:
        type: object
        properties:
          type:
            $ref: '#/definitions/PetType'
          attributes:
            type: object
            properties:
              name:
                $ref: '#/definitions/PetResource/properties/attributes/properties/name'
              owner:
                $ref: '#/definitions/PetResource/properties/attributes/properties/owner'
              species:
                $ref: '#/definitions/PetResource/properties/attributes/properties/species'
            required:
              - name
              - owner
              - species
            additionalProperties: false
        required:
          - type
          - attributes
        additionalProperties: false
    required:
     - data
    additionalProperties: false
  PetType:
    type: string
    enum: [pet]
  ErrorObject:
    properties:
      status:
        type: string
        description: HTTP status code
        example: '123'
      title:
        type: string
        description: A short, user readable summary of the error
        example: Not Found
      code:
        type: string
        description: An application-specific error code
        example: '1234'
      detail:
        type: string
        description: A long description of the error that may contain instance-specific details
      links:
        properties:
          about:
            type: string
            format: url
            description: A link to further information about the error
            example: https://developer.oregonstate.edu/documentation/error-reference#1234
  ErrorResult:
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/ErrorObject'
