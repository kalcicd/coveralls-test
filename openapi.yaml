openapi: 3.0.0
info:
  title: Express API Skeleton
  description: Skeleton for Express APIs
  version: v1
  license:
    name: GNU Affero General Public License Version 3
    url: http://www.gnu.org/licenses/agpl-3.0.en.html
  contact:
    name: IS Data Architecture Team
    url: https://is.oregonstate.edu/data-architecture
    email: isdataarchitecture@oregonstate.edu
servers:
  - url: https://api.oregonstate.edu/v1
externalDocs:
  description: GitHub Repository
  url: https://github.com/osu-mist/express-api-skeleton
paths:
  /pets:
    get:
      summary: List all pets
      tags:
        - pets
      description: Get all pets
      operationId: getPets
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - in: query
          name: species
          description: Search by pet species
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetsResult'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /pets/{id}:
    get:
      summary: Info for a specific pet
      tags:
        - pets
      description: Get pet by unique ID
      operationId: getPetById
      parameters:
        - $ref: '#/components/parameters/authorization'
        - name: id
          in: path
          description: Unique Pet ID
          required: true
          schema:
            type: string
            pattern: '^\d+$'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetResult'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
components:
  parameters:
    authorization:
      name: Authorization
      in: header
      required: true
      description: '"Bearer [token]" where [token] is your OAuth2 access token'
      schema:
        type: string
    pageNumber:
      name: page[number]
      in: query
      required: false
      description: Page number of results
      schema:
        type: integer
        minimum: 1
        default: 1
    pageSize:
      name: page[size]
      in: query
      required: false
      description: Number of results to return
      schema:
        type: integer
        minimum: 1
        maximum: 500
        default: 25
  responses:
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResult'
    '404':
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResult'
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResult'
  schemas:
    Meta:
      properties:
        totalResults:
          type: integer
          description: Total number of results
          example: 10
        totalPages:
          type: integer
          description: Total number of pages
          example: 10
        currentPageNumber:
          type: integer
          description: Page number of the returned results
          example: 1
        currentPageSize:
          type: integer
          description: Number of results per page
          example: 25
    SelfLink:
      properties:
        self:
          type: string
          format: url
          description: Self-link of current resource
    PaginationLinks:
      properties:
        first:
          type: string
          format: url
          description: The first page of data
        last:
          type: string
          format: url
          description: The last page of data
        prev:
          type: string
          format: url
          description: The previous page of data
        next:
          type: string
          format: url
          description: The next page of data
    PetResource:
      properties:
        id:
          type: string
          description: A unique ID of pet
        type:
          type: string
          enum:
            - pet
        links:
          $ref: '#/components/schemas/SelfLink'
        attributes:
          properties:
            name:
              type: string
              description: Name of pet
              example: Hedwig
            owner:
              type: string
              description: Name of owner
              example: Harry Potter
            species:
              type: string
              description: Species of pet
              example: Owl
    PetResult:
      properties:
        links:
          $ref: '#/components/schemas/SelfLink'
        data:
          $ref: '#/components/schemas/PetResource'
    PetsResult:
      properties:
        links:
          allOf:
            - $ref: '#/components/schemas/SelfLink'
            - $ref: '#/components/schemas/PaginationLinks'
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/PetResource'
    ErrorObject:
      properties:
        status:
          type: string
          description: HTTP status code
          example: '123'
        title:
          type: string
          description: A short, user readable summary of the error
          example: Not Found
        code:
          type: string
          description: An application-specific error code
          example: '1234'
        detail:
          type: string
          description: A long description of the error that may contain instance-specific
            details
        links:
          properties:
            about:
              type: string
              format: url
              description: A link to further information about the error
              example: https://developer.oregonstate.edu/documentation/error-reference#1234
    ErrorResult:
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorObject'
